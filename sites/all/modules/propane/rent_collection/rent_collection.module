<?php
require_once('new_notices.class');

function rent_collection($type_notice){
 $obj_rent = new new_notices;
 $obj_rent->pre_notice_checks($type_notice);
}
 
 
/**
 * Prepopulates the form for entering a rent payment
 * It takes the data from the ap-ar node (rent due) that the user clicked on
 */
function rent_collection_form_alter(&$form, &$form_state, $node){
  if($form['form_id']['#value'] == 'entry_node_form'){
    if(isset($_GET['rec'])){
    $rec_target = $_GET['rec'];
  
    $q = "SELECT field_property_apar_target_id as id FROM
	  {field_data_field_property_apar} WHERE
      entity_id = :rec_target";

    $arg = array(':rec_target' => $rec_target);
    $result_prop = db_query($q,$arg);
    $array_prop = $result_prop->fetchAssoc();
  
    global $user;
    $entry_node = new stdClass();
    $entry_node->type = 'entry';
    $entry_node->status = 1;
    $entry_node->field_type_entry['und'][0]['tid'] = 13;
    $entry_node->field_date_entry['und'][0]['value'] = date('Ymd');
    $entry_node->field_category_entry['und'][0]['tid'] = 22;
    $entry_node->field_property_entry['und'][0]['target_id'] = $array_prop['id'];
    $entry_node->field_pmt_ref_entry['und'][0]['target_id'] = $rec_target;
    $entry_node->uid = $user->uid;
    node_save($entry_node);

    //redirects to vbo view after creating entry nodes
    $new_nid = $entry_node->nid;
    drupal_goto('node/' . $new_nid . '/edit');
    }
  }
}


/**
 * Action that creates notice nodes (sending rent due reminders and late notices)
 */
function rent_collection_action_info(){
  return array(
  'create_notice1' => array(
  'type' => 'node',
  'label' => t('Create rent due notice node'),
  'group' => t('Custom'),
  'configurable' => FALSE,
  'triggers' => array('any'),
  ),
  
  'create_notice2' => array(
  'type' => 'node',
  'label' => t('Create late1 notice node'),
  'group' => t('Custom'),
  'configurable' => FALSE,
  'triggers' => array('any'),
  ),
  
  'create_notice3' => array(
  'type' => 'node',
  'label' => t('Create late2 notice node'),
  'group' => t('Custom'),
  'configurable' => FALSE,
  'triggers' => array('any'),
  ),
  );
}


function create_notice1($node){
  $type_notice = array('tid' => 7, 'type' => 'rent_due');

  // need to get the target month and year to use as arguments when calling view create notices
  $obj_rent = new new_notices;
  $target_my = $obj_rent->target_month_year($type_notice['type']);
  $arg = $target_my[1] . $target_my[0] . '01';

  create_notice_general($type_notice, $node, $arg);
}


function create_notice2($node){
  $type_notice = array('tid' => 8, 'type' => 'late1');

  // need to get the target month and year to use as arguments when calling view create notices
  $obj_rent = new new_notices;
  $target_my = $obj_rent->target_month_year($type_notice['type']);
  $arg = $target_my[1] . $target_my[0] . '01';

  create_notice_general($type_notice, $node, $arg);
}


function create_notice3($node){
  $type_notice = array('tid' => 9, 'type' => 'late2');

  // need to get the target month and year to use as arguments when calling view create notices
  $obj_rent = new new_notices;
  $target_my = $obj_rent->target_month_year($type_notice['type']);
  $arg = $target_my[1] . $target_my[0] . '01';

  create_notice_general($type_notice, $node, $arg);
}


function create_notice_general($type_notice, $node, $arg, $context = array()){
 
  // Choose which view to get data from
  if($type_notice['type'] == 'rent_due'){
    $view_name = 'create_notices_rent_due';
  }elseif($type_notice['type'] == 'late1'){
    $view_name = 'late1';
  }elseif($type_notice['type'] == 'late2'){
    $view_name = 'create_notices_late2';
  }
  
  // Get the data from the view, using the target month and year in $arg for the contextual filter
  $array_create_notices = views_get_view_result($view_name, $display_id = NULL, $arg);
  if (count($array_create_notices) < 1) {
    drupal_set_message('array_create_notices is empty');
    return;
  }
  
  
  // For each entry (rent due) node, we're going to check and see if the user clicked to create a notice node
  foreach($array_create_notices as $j){
  if($j->nid == $node->vid){
//dpm($j);
//return;
    //  This will later be used to build the text message programatically. Right now it is not doing anything. 
    if($type_notice['type'] == 'rent_due'){
      $message = $j->field_field_message_rent_due[0]['raw']['value'];
    }elseif($type_notice['type'] == 'late1'){
      $message = $j->field_field_message_late1[0]['raw']['value'];
    }elseif($type_notice['type'] == 'late2'){
      $message = $j->field_field_message_late2[0]['raw']['value'];
    } 
  
    // Create the notice node
    global $user;
    $notice_node = new stdClass();
    $notice_node->type = 'notice';
    $notice_node->status = 1;
	$notice_node->field_customer_lease['und'][0]['target_id'] = $j->users_field_data_field_customer_lease_uid;
	$notice_node->field_in_out_notice['und'][0]['tid'] = 37;
    $notice_node->field_type_notice['und'][0]['tid'] = $type_notice['tid'];
    $notice_node->field_date_notice['und'][0]['value'] = $arg;
    $notice_node->field_message['und'][0]['value'] = $message;
    $notice_node->field_mobile_notice['und'][0]['value'] = $j->field_field_mobile[0]['raw']['value'];
    $notice_node->uid = $user->uid;
	$notice_node->field_customer_lease['und'][0]['target_id'] = $j->users_field_data_field_customer_lease_uid;
    node_save($notice_node);
  }
  }
}

 
/**
 * This is not being used right now because text messages are not generated programatically.
 * In the future, I will use this function to generate the text messages.
 */
 function get_message($type_notice,$prop,$rent){
 if($type_notice['type'] == 'rent_due'){
  $message = 'rent due ' . $prop . ' ' . $rent;
 }elseif($type_notice['type'] == 'late1'){
  $message = 'late1 ' . $prop . ' ' . $rent;
 }elseif($type_notice['type'] == 'late2'){
  $message = 'late2 ' . $prop . ' ' . $rent;
 }

 return $message;
 }
 